import React, { useState } from 'react';
import { Box, Button, Typography } from '@mui/material';
import SummaryBarChart from './SummaryBarChart';
import FrequencyDistribution from './FrequencyDistribution';

const fallbackDataCache = {
  totalExecTime: 411.261916,
  avgRps: 12157.70244089414,
  min: 0.278708,
  max: 8.158833,
  avg: 0.8197523828000001,
  n: 5000,
  stdev: 2.0119,
  p50: 0.7827705,
  p95: 0.961,
  p99: 1.4242171700000001,
  labels: [
    0.125, 0.375, 0.625, 0.875, 1.125, 1.375, 1.625, 1.875, 2.125, 2.375, 
    2.625, 2.875, 3.125, 3.375, 3.625, 3.875, 4.125, 4.375, 4.625, 4.875, 
    5.125, 5.375, 5.625, 5.875, 6.125, 6.375, 6.625, 6.875, 7.125, 7.375, 
    7.625, 7.875, 8.125, 8.375, 8.625, 8.875, 9.125, 9.375, 9.625, 9.875, 
    10.125, 10.375, 10.625, 10.875, 11.125, 11.375, 11.625, 11.875, 12.125, 
    12.375, 12.625, 12.875, 13.125, 13.375, 13.625, 13.875, 14.125, 14.375, 
    14.625, 14.875, 15.125, 15.375, 15.625, 15.875, 16.125, 16.375, 16.625, 
    16.875, 17.125, 17.375, 17.625, 17.875, 18.125, 18.375, 18.625, 18.875, 
    19.125, 19.375, 19.625, 19.875, 20.125, 20.375, 20.625, 20.875, 21.125, 
    21.375, 21.625, 21.875, 22.125, 22.375, 22.625, 22.875, 23.125, 23.375, 
    23.625, 23.875, 24.125, 24.375, 24.625, 24.875, 25.125, 25.375, 25.625, 
    25.875, 26.125, 26.375, 26.625, 26.875, 27.125, 27.375, 27.625, 27.875, 
    28.125, 28.375, 28.625, 28.875, 29.125, 29.375, 29.625, 29.875, 30.125, 
    30.375, 30.625, 30.875, 31.125, 31.375, 31.625, 31.875, 32.125, 32.375, 
    32.625, 32.875, 33.125, 33.375, 33.625, 33.875, 34.125, 34.375, 34.625, 
    34.875, 35.125, 35.375, 35.625, 35.875, 36.125, 36.375, 36.625, 36.875, 
    37.125, 37.375, 37.625, 37.875, 38.125, 38.375, 38.625, 38.875, 39.125, 
    39.375, 39.625, 39.875, 40.125, 40.375, 40.625, 40.875, 41.125, 41.375, 
    41.625, 41.875, 42.125, 42.375, 42.625, 42.875, 43.125, 43.375, 43.625, 
    43.875, 44.125, 44.375, 44.625, 44.875
  ],
  values: [
    222, 238, 261, 249, 244, 227, 220, 225, 206, 162, 151, 133, 118,
    123, 104, 94, 63, 55, 48, 28, 19, 24, 12, 11, 7, 8,
    2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
  ]
};

const fallbackDataNoCache = {
  totalExecTime: 3703.315583,
  avgRps: 1350.141484823061,
  min: 1.742833,
  max: 44.887625,
  avg: 7.388251067999998,
  n: 5000,
  stdev: 10.8288,
  p50: 7.3768955,
  p95: 8.80865065,
  p99: 9.8089715,
  labels: [
    0.125, 0.375, 0.625, 0.875, 1.125, 1.375, 1.625, 1.875, 2.125, 2.375, 
    2.625, 2.875, 3.125, 3.375, 3.625, 3.875, 4.125, 4.375, 4.625, 4.875, 
    5.125, 5.375, 5.625, 5.875, 6.125, 6.375, 6.625, 6.875, 7.125, 7.375, 
    7.625, 7.875, 8.125, 8.375, 8.625, 8.875, 9.125, 9.375, 9.625, 9.875, 
    10.125, 10.375, 10.625, 10.875, 11.125, 11.375, 11.625, 11.875, 12.125, 
    12.375, 12.625, 12.875, 13.125, 13.375, 13.625, 13.875, 14.125, 14.375, 
    14.625, 14.875, 15.125, 15.375, 15.625, 15.875, 16.125, 16.375, 16.625, 
    16.875, 17.125, 17.375, 17.625, 17.875, 18.125, 18.375, 18.625, 18.875, 
    19.125, 19.375, 19.625, 19.875, 20.125, 20.375, 20.625, 20.875, 21.125, 
    21.375, 21.625, 21.875, 22.125, 22.375, 22.625, 22.875, 23.125, 23.375, 
    23.625, 23.875, 24.125, 24.375, 24.625, 24.875, 25.125, 25.375, 25.625, 
    25.875, 26.125, 26.375, 26.625, 26.875, 27.125, 27.375, 27.625, 27.875, 
    28.125, 28.375, 28.625, 28.875, 29.125, 29.375, 29.625, 29.875, 30.125, 
    30.375, 30.625, 30.875, 31.125, 31.375, 31.625, 31.875, 32.125, 32.375, 
    32.625, 32.875, 33.125, 33.375, 33.625, 33.875, 34.125, 34.375, 34.625, 
    34.875, 35.125, 35.375, 35.625, 35.875, 36.125, 36.375, 36.625, 36.875, 
    37.125, 37.375, 37.625, 37.875, 38.125, 38.375, 38.625, 38.875, 39.125, 
    39.375, 39.625, 39.875, 40.125, 40.375, 40.625, 40.875, 41.125, 41.375, 
    41.625, 41.875, 42.125, 42.375, 42.625, 42.875, 43.125, 43.375, 43.625, 
    43.875, 44.125, 44.375, 44.625, 44.875
  ],
  values: [
    30, 46, 36, 37, 47, 34, 50, 36, 43, 31, 38, 42, 45, 40, 43, 41, 46, 40, 
    37, 39, 47, 36, 40, 40, 54, 45, 43, 59, 46, 34, 41, 37, 37, 43, 50, 41, 
    49, 43, 51, 48, 34, 48, 41, 42, 39, 45, 46, 39, 40, 42, 55, 42, 45, 37, 
    41, 38, 45, 31, 48, 34, 43, 28, 41, 32, 29, 36, 37, 32, 25, 28, 22, 39, 
    22, 30, 30, 23, 27, 31, 28, 30, 15, 16, 17, 17, 25, 25, 23, 28, 13, 14, 
    10, 14, 23, 19, 12, 22, 11, 13, 12, 19, 22, 14, 10, 9, 5, 9, 11, 13, 14, 
    15, 11, 8, 12, 6, 5, 6, 4, 4, 6, 3, 8, 6, 8, 2, 2, 3, 3, 4, 4, 3, 3, 4, 
    1, 2, 1, 3, 3, 2, 3, 4, 1, 0, 1, 0, 3, 2, 1, 3, 3, 1, 1, 2, 1, 0, 0, 0, 
    1, 0, 1, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
  ]
};

const SummaryContainer: React.FC = () => {
  const [cacheData, setCacheData] = useState(null);
  const [noCacheData, setNoCacheData] = useState(null);

  const fetchCacheData = async () => {
    try {
      const response = await fetch('/api/CacheData');
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const result = await response.json();
      setCacheData(result);
    } catch (error) {
      console.error('Fetch cache data failed, using fallback data', error);
      setCacheData(fallbackDataCache);
    }
  };

  const fetchNoCacheData = async () => {
    try {
      const response = await fetch('/api/noCacheData');
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const result = await response.json();
      setNoCacheData(result);
    } catch (error) {
      console.error('Fetch no cache data failed, using fallback data', error);
      setNoCacheData(fallbackDataNoCache);
    }
  };

  const fetchData = async () => {
    await Promise.all([fetchCacheData(), fetchNoCacheData()]);
  };

  return (
    <Box display='flex' flexDirection='column' alignItems='center' padding={3} minHeight='30vh'>
      <Button variant='contained' color='primary' onClick={fetchData}>
        Run Benchmark Test
      </Button>
      {cacheData && noCacheData && (
        <>
          <Box padding={5} width='100%'>
            <Typography variant='h6'>Summary Statistics</Typography>
            <SummaryBarChart cacheData={cacheData} noCacheData={noCacheData} />
          </Box>
          <Box padding={5} width='100%'>
            <Typography variant='h6'>Frequency Distribution</Typography>
            <FrequencyDistribution cacheData={cacheData} noCacheData={noCacheData} />
          </Box>
        </>
      )}
    </Box>
  );
};

export default SummaryContainer;
